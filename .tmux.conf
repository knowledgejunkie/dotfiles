# .tmux.conf file

# Credits {{{1

# Snippets (large and small) taken from:
#   https://pragprog.com/titles/bhtmux/source_code
#   https://github.com/wincent/wincent/blob/master/roles/dotfiles/files/.tmux.conf

# Tips {{{1

# Bindings:
# - to see current bindings:
#   list-keys -t {vi,emacs}-{edit,choice,copy}

# Global settings {{{1

# Setting the delay between prefix and command
set -s escape-time 1

# Set the base index for windows to 1 instead of 0
set -g base-index 1

# Set the base index for panes to 1 instead of 0
setw -g pane-base-index 1

# Automatically renumber window numbers on closing a pane (tmux >= 1.7).
set -g renumber-windows on

# Mouse can be used to select panes, select windows (by clicking on the status
# bar), resize panes. For default bindings see `tmux list-keys` and `tmux
# list-keys -t vi-copy`.
set -g mouse on

# Slightly more useful width in "main-vertical" layout; enough room for 3-digit
# line number gutter in Vim + 80 columns of text + 1 column breathing room
# (default looks to be about 79).
set -w -g main-pane-width 85

set -g history-limit 262144

# Dynamically update terminal tab/window titles.
set -g set-titles on

# Needed as on tmux 1.9 and up (defaults to off).
# Added in tmux commit c7a121cfc0137c907b7bfb.
set -g focus-events on

# But don't change tmux's own window titles.
set -w -g automatic-rename off

# Don't wrap searches; it's super confusing given tmux's reverse-ordering of
# position info in copy mode.
set -w -g wrap-search off

# Set the default terminal mode to 256color mode
set -g default-terminal "screen-256color"

# enable activity alerts
setw -g monitor-activity on
set -g visual-activity on

# enable vi keys.
setw -g mode-keys vi

# Center the window list
set -g status-justify centre
# Prefix {{{1

# Prefix
unbind C-b
set -g prefix C-Space

# Ensure that we can send Ctrl-Space to other apps
bind C-Space send-prefix

# Bindings {{{1

# Reload the file with Prefix r
unbind r
bind r source-file ~/.tmux.conf \; display "Reloaded tmux config..."

# Open new windows/splits with the path of the current pane.
unbind c
bind c new-window -c '#{pane_current_path}'
unbind %
bind | split-window -h -c '#{pane_current_path}' # normally prefix-%
bind \ split-window -h -c '#{pane_current_path}' # normally prefix-%
unbind '"'
bind - split-window -v -c '#{pane_current_path}' # normally prefix-"

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
bind-key -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
bind-key -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
bind-key -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
bind-key -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"

# Vim-like key bindings for pane navigation (default uses cursor keys).
unbind h
bind h select-pane -L
unbind j
bind j select-pane -D
unbind k
bind k select-pane -U
unbind l # normally last-window
bind l select-pane -R

# Quick pane cycling
bind -r Tab select-pane -t :.+

# Resizing (mouse also works).
unbind H
bind -r H resize-pane -L 5
unbind L # normally last session
bind -r L resize-pane -R 5
unbind J
bind -r J resize-pane -D 5
unbind K
bind -r K resize-pane -U 5

# Fast toggle (normally prefix-l).
# unbind C-space
bind ^space last-window

# Quick window selection
unbind Left
bind -r Left select-window -t :-
unbind Right
bind -r Right select-window -t :+

# Shift arrow to switch windows
unbind S-Left
bind -n S-Left  previous-window
unbind S-Right
bind -n S-Right next-window

# C-S arrow to swap windows
unbind C-S-Left
bind -n C-S-Left  swap-window -t -1
unbind C-S-Right
bind -n C-S-Right swap-window -t +1

bind -t vi-copy v begin-selection
bind -t vi-copy Escape cancel # for when C-c and q are not enough.

# Yank/paste to X primary/clipboard
bind -t vi-copy y copy-pipe "xsel --input --primary"
bind p run "xsel --output --primary | tmux load-buffer - && tmux paste-buffer"

bind -t vi-copy C-c copy-pipe "xsel --input --clipboard"
bind C-v run "xsel --output --clipboard | tmux load-buffer - && tmux paste-buffer"

# Restore pre-2.1 behavior of scrolling with the scrollwheel in Vim, less, copy
# mode etc, otherwise entering copy mode if not already in it.
#
#   if in copy mode (pane_in_mode) || using the mouse already (mouse_any_flag)
#     pass through mouse events to current pane (send -Mt=)
#   elsif in alternate screen mode
#     send `Up` key
#   else
#     enter copy mode (-e exits if we scroll to the bottom)
#   end
#
bind -T root WheelUpPane \
  if-shell -Ft= '#{?pane_in_mode,1,#{mouse_any_flag}}' \
    'send -Mt=' \
    'if-shell -Ft= "#{alternate_on}" "send -t= Up" "copy-mode -et="'
bind -T root WheelDownPane \
  if-shell -Ft = '#{?pane_in_mode,1,#{mouse_any_flag}}' \
    'send -Mt=' \
    'if-shell -Ft= "#{alternate_on}"  "send -t= Down" "send -Mt="'

# Stay in copy mode on drag end, but otherwise exit for mouse up.
# Requires patch from https://github.com/tmux/tmux/issues/326
unbind -t vi-copy MouseDragEnd1Pane
bind -t vi-copy MouseUp1Pane cancel


# Status bar {{{1

# Status line left side
set -g status-left-length 20
set -g status-left "#[fg=green]#S"

# Status line right side
# 15% | 28 Nov 18:15
set -g status-right "#(tmux-battery -t) #[fg=cyan]%d %b %R"

# Update the status bar every sixty seconds
set -g status-interval 60

# Colours {{{1

# https://github.com/seebi/tmux-colors-solarized/blob/master/tmuxcolors-dark.conf

# default statusbar colors
set-option -g status-bg black #base02
set-option -g status-fg yellow #yellow
set-option -g status-attr default

# default window title colors
set-window-option -g window-status-fg brightblue #base0
set-window-option -g window-status-bg default
#set-window-option -g window-status-attr dim

# active window title colors
# set-window-option -g window-status-current-fg brightred #orange
set-window-option -g window-status-current-fg green #orange
set-window-option -g window-status-current-bg default
#set-window-option -g window-status-current-attr bright

# pane border
set-option -g pane-border-fg black #base02
set-option -g pane-active-border-fg brightgreen #base01

# message text
set-option -g message-bg black #base02
set-option -g message-fg brightred #orange

# pane number display
set-option -g display-panes-active-colour blue #blue
set-option -g display-panes-colour brightred #orange

# window activity
set-window-option -g window-status-activity-attr none
set-window-option -g window-status-activity-fg red
set-window-option -g window-status-activity-bg default

# clock
set-window-option -g clock-mode-colour green #green

# bell
set-window-option -g window-status-bell-style fg=black,bg=red #base02, red

# vim: fdm=marker:
