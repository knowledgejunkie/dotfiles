# .tmux.conf file

# Credits {{{1

# Snippets (large and small) taken from:
#   https://pragprog.com/titles/bhtmux/source_code
#   https://github.com/wincent/wincent/blob/master/roles/dotfiles/files/.tmux.conf
#   https://github.com/nicknisi/dotfiles/blob/master/tmux/tmux.conf.symlink
#
#   ... and many more!

# Tips {{{1

# Bindings:
# - to see current bindings:
#     :list-keys [-T copy-mode{,-vi}]
#
# - to see all bindable keys:
#     https://raw.githubusercontent.com/tmux/tmux/master/key-string.c

# Server options {{{1

# Set the delay (ms) between prefix and command
set -g escape-time 1

# Set the default terminal mode to 256color mode
set -g default-terminal "screen-256color"

# Needed as on tmux 1.9 and up (defaults to off).
# Added in tmux commit c7a121cfc0137c907b7bfb.
set -g focus-events on

# Session options {{{1

# Set the base index for windows to 1 instead of 0
set -g base-index 1

# Set action on a bell in a window when monitor-bell is on
set -g bell-action none

# Start a non-login shell instead of default login shell
set -g default-command "${SHELL}"

# The maximum number of lines held in window history
set -g history-limit 262144

# Mouse can be used to select panes, select windows (by clicking on the status
# bar), resize panes. For default bindings see `tmux list-keys` and `tmux
# list-keys -t vi-copy`.
set -g mouse off

# Automatically renumber window numbers on closing a pane (tmux >= 1.7).
set -g renumber-windows on

# Set the maximum for a key repeat
set -g repeat-time 300

# Dynamically update terminal tab/window titles.
set -g set-titles on

# Center the window list
set -g status-justify centre

# statsus line key bindings
set -g status-keys emacs

# Enable visual bell
set -g visual-bell off

# Window options {{{1

# Rather than constraining window size to the maximum size of any client
# connected to the *session*, constrain window size to the maximum size of any
# client connected to *that window*. Much more reasonable.
setw -g aggressive-resize on

# Don't change window titles.
setw -g automatic-rename off

# Slightly more useful width in "main-vertical" layout; enough room for 3-digit
# line number gutter in Vim + 80 columns of text + 1 column breathing room
# (default looks to be about 79).
setw -g main-pane-width 85

# vi keys.
setw -g mode-keys vi

# enable activity alerts
setw -g monitor-activity on

# monitor for a bell in the window
setw -g monitor-bell on

# Set the base index for panes to 1 instead of 0
setw -g pane-base-index 1

# Don't wrap searches; it's super confusing given tmux's reverse-ordering of
# position info in copy mode.
setw -g wrap-search off

# Enable xterm-style key sequences
setw -g xterm-keys on

# Prefix key {{{1

# Prefix key
unbind C-b
set -g prefix C-Space

# Ensure that we can send Ctrl-Space to other apps
bind C-b send-prefix

# General key bindings {{{1

# Reload the file with Prefix r
unbind r
bind r source-file ~/.tmux.conf \; display "Reloaded tmux config..."

# Open new windows/splits with the path of the current pane.
unbind c
bind c new-window -c "#{pane_current_path}"
# Open new windows/splits in home directory
unbind C
bind C new-window -c "~"
# normally prefix-%
unbind %
bind \ split-window -h -c "#{pane_current_path}"
# normally prefix-"
unbind '"'
bind - split-window -v -c "#{pane_current_path}"

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
bind -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
bind -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
bind -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
bind -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"

# Vim-like key bindings for pane navigation (default uses cursor keys).
unbind h
bind h select-pane -L
unbind j
bind j select-pane -D
unbind k
bind k select-pane -U
unbind l # normally last-window
bind l select-pane -R

# Quick pane cycling
bind -r Tab select-pane -t :.+

# Resizing
unbind H
bind -r H resize-pane -L 5
unbind L # normally last session
bind -r L resize-pane -R 5
unbind J
bind -r J resize-pane -D 5
unbind K
bind -r K resize-pane -U 5

# Fast toggle (normally prefix-l).
# unbind C-space
bind C-Space last-window

# Window switching with prefix
unbind Left
bind -r Left previous-window
unbind Right
bind -r Right next-window

# Prefix-less window switching
unbind S-Left
bind -n S-Left  previous-window
unbind S-Right
bind -n S-Right next-window

# Prefix-less window swapping
unbind C-S-Left
bind -n C-S-Left  swap-window -t -1
unbind C-S-Right
bind -n C-S-Right swap-window -t +1

# toggle synchronize all panes in a window
unbind y
bind y setw synchronize-panes

# change sessions within tmux
unbind (
bind -r C-Left switch-client -p
unbind )
bind -r C-Right switch-client -n

# Vim-mode key bindings {{{1

# vim-style yank-paste tmux buffers
unbind Escape
bind Escape copy-mode

bind -Tcopy-mode-vi v send -X begin-selection
bind -Tcopy-mode-vi V send -X select-line
bind -Tcopy-mode-vi C-v send -X rectangle-toggle \; send -X begin-selection
bind -Tcopy-mode-vi y send -X copy-selection-and-cancel
bind -Tcopy-mode-vi Escape send -X cancel

unbind p
bind p paste-buffer
bind C-p choose-buffer

# vim-style yank/paste to X primary
# bind -Tcopy-mode-vi Y send -X copy-pipe "xsel --input --primary"
bind -Tcopy-mode-vi Y send -X copy-pipe-and-cancel "xsel --input --primary"
bind P run "xsel --output --primary | tmux load-buffer - && tmux paste-buffer"

# vim-style yank/paste to X clipboard
# bind -Tcopy-mode-vi C-c send -X copy-pipe "xsel --input --clipboard"
bind -Tcopy-mode-vi C-c send -X copy-pipe-and-cancel "xsel --input --clipboard"
bind C-v run "xsel --output --clipboard | tmux load-buffer - && tmux paste-buffer"

# Colours {{{1

# Note the tmux mapping of colour numbers to names:
#   https://github.com/tmux/tmux/blob/master/colour.c#L109
#
# (See bin/colorlist to get a list of current colours by int)
#
# case  0: return ("black");
# case  1: return ("red");
# case  2: return ("green");
# case  3: return ("yellow");
# case  4: return ("blue");
# case  5: return ("magenta");
# case  6: return ("cyan");
# case  7: return ("white");
# case  8: return ("default");
# case 90: return ("brightblack");
# case 91: return ("brightred");
# case 92: return ("brightgreen");
# case 93: return ("brightyellow");
# case 94: return ("brightblue");
# case 95: return ("brightmagenta");
# case 96: return ("brightcyan");
# case 97: return ("brightwhite");

# Based on https://github.com/seebi/tmux-colors-solarized

# Display panes
set -g display-panes-active-colour colour1
set -g display-panes-colour colour4

# Staus line
set -g message-style fg=colour1,bg=colour0

# Clock
setw -g clock-mode-colour colour2
setw -g clock-mode-style 24

# Panes
setw -g pane-active-border-style fg=colour11
setw -g pane-border-style fg=colour11,bg=colour0

# Windows
setw -g window-active-style fg=colour12,bg=colour8
setw -g window-status-activity-style fg=colour1,bg=default
setw -g window-status-bell-style fg=colour0,bg=colour1
setw -g window-status-current-style fg=colour2,bg=default
setw -g window-status-style fg=colour11,bg=default
setw -g window-style fg=colour10,bg=colour0

# Status bar {{{1

# Status line style
set -g status-style fg=colour3,bg=colour0

# Status line left side
set -g status-left "#[fg=colour2]#S #[fg=colour11]on #[fg=colour9]#H"
set -g status-left-length 30

# Status line right side (hidden text)
set -g status-right "#[fg=colour0]#S #[fg=colour0]on #[fg=colour0]#H"
set -g status-right-length 30

# Update the status bar every sixty seconds
# set -g status-interval 60

# Nested session support {{{1
#   Based on http://stahlke.org/dan/tmux-nested/
#
# The idea is to unbind prefix and any non-prefixed keys before "switching"

# to nested session (i.e. the prefix is only detected in the nested session).
# We restore the prefix and root table keys when "switching back" and change
# statusbar to give visual hint of active session.

# Convenience binding to disable status bar
bind -n M-F11 \
    set -qg status-style fg=colour10,bg=colour0 \; \
    setw -qg window-status-style fg=colour10,bg=default \; \
    setw -qg window-status-current-style fg=colour10,bg=default \; \
    setw -qg window-status-activity-style fg=colour12,bg=default \; \
    setw -qg window-status-bell-style fg=colour0,bg=colour1 \; \
    setw -qg window-status-format '(Inactive)' \; \
    set -qg status-left "" \;

# Convenience binding to enable status bar
bind -n M-F12 \
    set -qg status-style fg=colour3,bg=colour0 \; \
    setw -qg window-status-style fg=colour11,bg=default \; \
    setw -qg window-status-current-style fg=colour2,bg=default \; \
    setw -qg window-status-activity-style fg=colour1,bg=default \; \
    setw -qg window-status-bell-style fg=colour0,bg=colour1 \; \
    setw -qg window-status-format '#I:#W#F' \; \
    set -qg status-left "#[fg=colour2]#S #[fg=colour11]on #[fg=colour9]#H" \;

# "Switch" to inner (nested) session:
# - send M-F12 to active window (inner (nested) session) to enable status bar
# - disable status bar, default prefix and root keybindings for outer session
bind -n S-Up \
    send M-F12 \; \
    set -qg status-style fg=colour10,bg=colour0 \; \
    setw -qg window-status-style fg=colour10,bg=default \; \
    setw -qg window-status-current-style fg=colour10,bg=default \; \
    setw -qg window-status-activity-style fg=colour12,bg=default \; \
    setw -qg window-status-bell-style fg=colour0,bg=colour1 \; \
    setw -qg window-status-format '(Inactive)' \; \
    set -qg status-left "" \; \
    unbind -n S-Left \; \
    unbind -n S-Right \; \
    unbind -n C-S-Left \; \
    unbind -n C-S-Right \; \
    unbind -n C-h \; \
    unbind -n C-j \; \
    unbind -n C-k \; \
    unbind -n C-l \; \
    unbind -n C-\ \; \
    set -qg prefix C-S-Space

# Switch to outer (parent) session:
# - send M-F11 to active window to disable status bar
# - enable status bar, default prefix and root keybindings for outer session
bind -n S-Down \
    send M-F11 \; \
    set -qg status-style fg=colour3,bg=colour0 \; \
    setw -qg window-status-style fg=colour11,bg=default \; \
    setw -qg window-status-current-style fg=colour2,bg=default \; \
    setw -qg window-status-activity-style fg=colour1,bg=default \; \
    setw -qg window-status-bell-style fg=colour0,bg=colour1 \; \
    setw -qg window-status-format '#I:#W#F' \; \
    set -qg status-left "#[fg=colour2]#S #[fg=colour11]on #[fg=colour9]#H" \; \
    bind -n S-Left  previous-window \; \
    bind -n S-Right next-window \; \
    bind -n C-S-Left swap-window -t -1 \; \
    bind -n C-S-Right swap-window -t +1 \; \
    bind -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L" \; \
    bind -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D" \; \
    bind -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U" \; \
    bind -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R" \; \
    bind -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l" \; \
    set -qg prefix C-Space

# tmux plugin manager {{{1

# prefix + I
#
# Installs new plugins from GitHub or any other git repository
# Refreshes TMUX environment
#
# prefix + U
#
# updates plugin(s)
#
# prefix + alt + u
#
# remove/uninstall plugins not on the plugin list

# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'knowledgejunkie/tmux-logging'
# set -g @plugin 'tmux-plugins/tmux-sensible'

# Other examples:
# set -g @plugin 'github_username/plugin_name'
# set -g @plugin 'git@github.com/user/plugin'
# set -g @plugin 'git@bitbucket.com/user/plugin'

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'

# vim: fdm=marker
