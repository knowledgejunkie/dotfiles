#!/bin/bash

# Copyright (c) Nick Morrott 2015

# Inspired by https://github.com/necolas/dotfiles/blob/master/bin/dotfiles
# and https://github.com/kewah/dotfiles/blob/master/install

DOTFILES_DIRECTORY="${HOME}/.dotfiles"
POWERLINE_FONTS_DIRECTORY="${HOME}/.powerline-fonts"
PREZTO_DIRECTORY="${HOME}/.zprezto"

# DATE=`date +%Y%m%d-%H%M%S`
DATE=`date +%s`
BACKUP_DIRECTORY="${HOME}/.dotfiles-backup/${DATE}"

#------------------------------- general subs --------------------------------
link() {
  if [ -h "${HOME}/${2}" ]; then
    echo "    Deleting symlink ${HOME}/${2}"
    rm -f ${HOME}/${2}
  elif [ -f "${HOME}/${2}" || -d "${HOME}/${2}" ]; then
    backup_dotfile "${HOME}/${2}"
  fi

  # Create the symlink.
  echo "    Creating symlink ${HOME}/${2}"
  ln -s "${1}" "${HOME}/${2}"
}

backup_dotfile() {
  if [ ! -e ${BACKUP_DIRECTORY} ]; then
    mkdir -p ${BACKUP_DIRECTORY}
  fi

  echo "    Backing up ${1} to ${BACKUP_DIRECTORY}"
  mv ${1} ${BACKUP_DIRECTORY} >/dev/null
}

#-------------------------------- powerline-fonts ----------------------------
install_powerline() {
  if [ ! -e "${POWERLINE_FONTS_DIRECTORY}" ]; then
    # Clone the upstream Powerline patched fonts repo
    echo "  Cloning upstream 'powerline-fonts' repository..."
    git clone https://github.com/powerline/fonts.git "${POWERLINE_FONTS_DIRECTORY}" >/dev/null
  else
    # Update the upstream Powerline patched fonts repo if we already have it
    echo "  Updating upstream 'powerline-fonts' repository..."
    cd ${POWERLINE_FONTS_DIRECTORY}
    git pull >/dev/null
  fi
}

configure_powerline() {
  # Setup powerline-fonts
  echo "  Configuring..."
  cd ${POWERLINE_FONTS_DIRECTORY}
  ./install.sh >/dev/null
}

#-------------------------------- zsh/prezto ---------------------------------
install_prezto() {
  if [ ! -e "${PREZTO_DIRECTORY}" ]; then
    # Clone the upstream Prezto repo
    echo "  Cloning upstream 'prezto' repository..."
    git clone --recursive https://github.com/sorin-ionescu/prezto.git "${PREZTO_DIRECTORY}" >/dev/null
  else
    # Update the upstream Prezto repo if we already have it
    echo "  Updating upstream 'prezto' repository..."
    cd ${PREZTO_DIRECTORY}
    git pull --recurse-submodules >/dev/null
    git submodule update --recursive >/dev/null
fi
}

configure_prezto() {
  echo "  Configuring..."
  link "${DOTFILES_DIRECTORY}/.zlogin"    ".zlogin"
  link "${DOTFILES_DIRECTORY}/.zlogout"   ".zlogout"
  link "${DOTFILES_DIRECTORY}/.zpreztorc" ".zpreztorc"
  link "${DOTFILES_DIRECTORY}/.zprofile"  ".zprofile"
  link "${DOTFILES_DIRECTORY}/.zshenv"    ".zshenv"
  link "${DOTFILES_DIRECTORY}/.zshrc"     ".zshrc"

  echo "  Installing custom prompt..."
  if [ ! -e "${HOME}/.zfunctions" ]; then
    mkdir "${HOME}/.zfunctions"
  else
    echo "    Directory ${HOME}/.zfunctions already exists, so we'll use it"
  fi
  link "${DOTFILES_DIRECTORY}/.zprezto/modules/prompt/functions/prompt_knowledgejunkie_setup" ".zfunctions/prompt_knowledgejunkie_setup"
}

set_default_shell_to_zsh() {
  echo ""
  echo "Enter password to set zsh as this account's default shell"
  chsh -s /bin/zsh
}

#----------------------------------- vim -------------------------------------

configure_vim() {
  echo "  Configuring..."

  # Backup "real" vim directory (not symlink)
  # if [ -e "${HOME}/.vim" ]; then
  #   backup_dotfile "${HOME}/.vim"
  # fi

  link "${DOTFILES_DIRECTORY}/.vim"   ".vim"
  link "${DOTFILES_DIRECTORY}/.vimrc" ".vimrc"
}

configure_vim_plugins() {
  # Plugins
  if [ ! -e "${DOTFILES_DIRECTORY}/.vim/plugged" ]; then
    echo "  Installing plugins..."
    # Install if it looks like we haven't already run PlugInstall
    vim +PlugInstall +qall now
  else
    # Otherwise update
    echo "  Updating plugins..."
    vim +PlugUpdate +qall now
  fi
}

#---------------------------------- xmonad -----------------------------------

configure_xmonad() {
  # Backup "real" xmonad directory (not symlink)
  # if [ -e "${HOME}/.xmonad" ]; then
  #   backup_dotfile "${HOME}/.xmonad"
  # fi

  echo "  Configuring..."
  link "${DOTFILES_DIRECTORY}/.xmonad" ".xmonad"
}

#--------------------------------- dotfiles ----------------------------------

install_dotfiles() {
  # Scripts dir setup (provided .zshrc prepends this dir to $PATH)
  echo "  Configuring scripts directory..."
  link "${DOTFILES_DIRECTORY}/bin"                ".bin"

  # git template/hooks dir setup
  echo "  Configuring git template/hooks directory..."
  link "${DOTFILES_DIRECTORY}/.git_template"      ".git_template"

  # Remaining dotfiles setup
  echo "  Configuring symlinks"
  link "${DOTFILES_DIRECTORY}/.Xresources"        ".Xresources"
  link "${DOTFILES_DIRECTORY}/.ackrc"             ".ackrc"
  link "${DOTFILES_DIRECTORY}/.bash_aliases"      ".bash_aliases"
  link "${DOTFILES_DIRECTORY}/.ctags"             ".ctags"
  link "${DOTFILES_DIRECTORY}/.dircolors"         ".dircolors"
  link "${DOTFILES_DIRECTORY}/.dput.cf"           ".dput.cf"
  link "${DOTFILES_DIRECTORY}/.editrc"            ".editrc"
  link "${DOTFILES_DIRECTORY}/.gbp.conf"          ".gbp.conf"
  link "${DOTFILES_DIRECTORY}/.gitconfig"         ".gitconfig"
  link "${DOTFILES_DIRECTORY}/.gitignore"         ".gitignore"
  link "${DOTFILES_DIRECTORY}/.gitk"              ".gitk"
  link "${DOTFILES_DIRECTORY}/.gitmessage"        ".gitmessage"
  link "${DOTFILES_DIRECTORY}/.inputrc"           ".inputrc"
  link "${DOTFILES_DIRECTORY}/.pentadactylrc"     ".pentadactylrc"
  link "${DOTFILES_DIRECTORY}/.quiltrc"           ".quiltrc"
  link "${DOTFILES_DIRECTORY}/.reportbugrc"       ".reportbugrc"
  link "${DOTFILES_DIRECTORY}/.tmux.conf"         ".tmux.conf"
  link "${DOTFILES_DIRECTORY}/.xbindkeysrc"       ".xbindkeysrc"
  link "${DOTFILES_DIRECTORY}/.xinitrc"           ".xinitrc"
  link "${DOTFILES_DIRECTORY}/.xinitrc.xfce4"     ".xinitrc.xfce4"
  link "${DOTFILES_DIRECTORY}/.ycm_extra_conf.py" ".ycm_extra_conf.py"
}

#-----------------------------------------------------------------------------

echo "[powerline-fonts]"
install_powerline
configure_powerline
echo ""

echo "[zsh/prezto]"
install_prezto
configure_prezto
set_default_shell_to_zsh
echo ""

echo "[vim]"
configure_vim
configure_vim_plugins
echo ""

echo "[xmonad]"
configure_xmonad
echo ""

echo "[dotfiles]"
install_dotfiles
echo ""

echo "Finished!"
